name: Test project in a PR
on: [pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: flutter pub global activate melos ^2.5.0

      # Download all the packages that the app uses and override internal dependencies
      - run: melos bootstrap

      - run: melos run check-format

      - run: melos run analyze

  test_mac:
    runs-on: macos-latest
    defaults:
      run:
        # Run everything from within the super_editor project directory
        working-directory: ./super_editor
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64

      - run: flutter pub global activate melos ^2.5.0

      # Download all the packages that the app uses and override internal dependencies
      - run: melos bootstrap

      # Run all tests
      - run: flutter test

  test_windows:
    runs-on: windows-latest
    defaults:
      run:
        # Run everything from within the super_editor project directory
        working-directory: ./super_editor
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - run: flutter pub global activate melos ^2.5.0

      # Download all the packages that the app uses and override internal dependencies
      - run: melos bootstrap

      # Run all tests
      - run: flutter test

  test_linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        # Run everything from within the super_editor project directory
        working-directory: ./super_editor
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - run: flutter pub global activate melos ^2.5.0

      # Download all the packages that the app uses and override internal dependencies
      - run: melos bootstrap

      # Run all tests
      - run: flutter test

  test_super_editor_markdown:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./super_editor_markdown
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - run: flutter pub global activate melos ^2.5.0

      # Download all the packages that the app uses and override internal dependencies
      - run: melos bootstrap

      # Run all tests
      - run: flutter test

  test_super_text_layout:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./super_text_layout
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - run: flutter pub global activate melos ^2.5.0

      # Download all the packages that the app uses and override internal dependencies
      - run: melos bootstrap

      # Run all tests
      - run: flutter test

  test_goldens_super_text_layout:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./super_text_layout
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64

      - run: flutter pub global activate melos ^2.5.0

      # Download all the packages that the app uses and override internal dependencies
      - run: melos bootstrap

      # Run all golden tests
      - run: flutter test test_goldens

  test_attributed_text:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./attributed_text
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Dart
      - uses: dart-lang/setup-dart@v1

      # Install app dependencies
      - run: dart pub get

      # Run all tests
      - run: dart test
